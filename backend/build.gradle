plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.0'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.resumeai'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	// Spring AI - 안정 버전
	implementation 'org.springframework.ai:spring-ai-openai-spring-boot-starter:0.8.1'

	// JSON Processing
	implementation 'com.fasterxml.jackson.core:jackson-databind'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// Configuration Processor
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

	// Test Dependencies
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

// JAR 파일명 설정
jar {
	archiveBaseName = 'resume-ai-backend'
	archiveVersion = '0.0.1-SNAPSHOT'
}

// 실행 가능한 JAR 생성
bootJar {
	archiveBaseName = 'resume-ai-backend'
	archiveVersion = '0.0.1-SNAPSHOT'
}

// 개발 시 자동 재시작 설정
if (project.hasProperty('dev')) {
	dependencies {
		developmentOnly 'org.springframework.boot:spring-boot-devtools'
	}
}

// 컴파일 옵션
compileJava {
	options.compilerArgs += ['-parameters']
}